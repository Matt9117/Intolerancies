name: Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --legacy-peer-deps
          fi

      - name: Build web (Vite → dist/)
        run: npm run build

      # Capacitor balíčky (idempotentne)
      - name: Ensure Capacitor deps
        run: |
          npm ls @capacitor/core >/dev/null 2>&1 || npm i @capacitor/core@5 -E
          npm ls @capacitor/android >/dev/null 2>&1 || npm i @capacitor/android@5 -E
          npm ls @capacitor/cli >/dev/null 2>&1 || npm i -D @capacitor/cli@5 -E

      - name: Check Capacitor CLI
        run: |
          npx -y -p @capacitor/cli@5 capacitor --version
          npx -y -p @capacitor/cli@5 capacitor --help >/dev/null

      # Konfigurácia Capacitor (ak chýba)
      - name: Ensure capacitor.config.json
        shell: bash
        run: |
          if [ ! -f "capacitor.config.json" ] && [ ! -f "capacitor.config.ts" ] && [ ! -f "capacitor.config.js" ]; then
            printf '{\n' > capacitor.config.json
            printf '  "appId": "com.matt.intolerancies",\n' >> capacitor.config.json
            printf '  "appName": "radka-scanner-plus",\n' >> capacitor.config.json
            printf '  "webDir": "dist",\n' >> capacitor.config.json
            printf '  "bundledWebRuntime": false,\n' >> capacitor.config.json
            printf '  "server": { "androidScheme": "https" },\n' >> capacitor.config.json
            printf '  "plugins": { "SplashScreen": { "launchShowDuration": 0 } }\n' >> capacitor.config.json
            printf '}\n' >> capacitor.config.json
          fi
          cat capacitor.config.json

      - name: Add Android platform if missing
        shell: bash
        run: |
          if [ ! -d "android" ]; then
            npx -y -p @capacitor/cli@5 capacitor add android
          fi

      - name: Sync Capacitor (Android)
        run: npx -y -p @capacitor/cli@5 capacitor sync android

      # Povolenie kamery v manifeste
      - name: Ensure CAMERA permission
        shell: bash
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if [ -f "$MANIFEST" ]; then
            grep -q 'android.permission.CAMERA' "$MANIFEST" || \
              sed -i '/<application/i\    <uses-permission android:name="android.permission.CAMERA" />' "$MANIFEST"
            grep -q 'android.hardware.camera' "$MANIFEST" || \
              sed -i '/<application/i\    <uses-feature android:name="android.hardware.camera" android:required="false" />' "$MANIFEST"
          fi

      # Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Ručná inštalácia Android SDK
      - name: Install Android SDK (cmdline-tools)
        shell: bash
        run: |
          set -e
          ANDROID_SDK_ROOT="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"
          rm -f cmdtools.zip

          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true

          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/tools/bin" >> $GITHUB_PATH

      # ✅ Licencie áno, inštalácia už BEZ "yes |" (inak vzniká Broken pipe)
      - name: Accept SDK licenses & install packages (robust)
        shell: bash
        run: |
          set -e
          ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT:-$HOME/android-sdk}"
          export ANDROID_SDK_ROOT ANDROID_HOME="$ANDROID_SDK_ROOT"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"

          mkdir -p "$HOME/.android"
          touch "$HOME/.android/repositories.cfg"

          echo "sdkmanager version:"
          sdkmanager --version

          # prijmi licencie (tu môžeme použiť yes)
          yes | sdkmanager --licenses || true

          # update indexov (ticho; nevadí, ak nič nie je)
          sdkmanager --update || true

          # inštaluj balíky PO JEDNOM (bez yes | ...)
          sdkmanager "platform-tools"
          sdkmanager "platforms;android-34"
          sdkmanager "build-tools;34.0.0"

          # ešte raz licencie pre istotu (ak by niečo pribudlo)
          yes | sdkmanager --licenses || true

      # Build APK
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build debug APK
        working-directory: android
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
